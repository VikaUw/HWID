local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\99\0","\41\77\46\231\131\38\32"),function(v42) if (v9(v42,2)==79) then local v91=0;while true do if (v91==0) then v30=v8(v11(v42,1,1));return "";end end else local v92=0;local v93;while true do if (v92==0) then v93=v10(v8(v42,16));if v30 then local v116=0;local v117;while true do if (0==v116) then v117=v13(v93,v30);v30=nil;v116=1;end if (1==v116) then return v117;end end else return v93;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v94=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v94-(v94%1) ;else local v95=2^(v44-1) ;return (((v43%(v95 + v95))>=v95) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + (5 -3) ;return (v48 * 256) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * (187552 -122016)) + (v50 * (493 -237)) + v49 ;end local function v35() local v53=v34();local v54=v34();local v55=1;local v56=(v31(v54,2 -1 ,20) * (2^32)) + v53 ;local v57=v31(v54,21,31);local v58=((v31(v54,32)==1) and  -1) or 1 ;if (v57==0) then if (v56==0) then return v58 * 0 ;else local v100=0;while true do if (v100==0) then v57=620 -(555 + 64) ;v55=0;break;end end end elseif (v57==2047) then return ((v56==0) and (v58 * ((932 -(857 + 74))/0))) or (v58 * NaN) ;end return v16(v58,v57-1023 ) * (v55 + (v56/(2^52))) ;end local function v36(v59) local v60;if  not v59 then local v96=0;while true do if (0==v96) then v59=v34();if (v59==0) then return "";end break;end end end v60=v11(v27,v29,(v29 + v59) -1 );v29=v29 + v59 ;local v61={};for v75=1, #v60 do v61[v75]=v10(v9(v11(v60,v75,v75)));end return v14(v61);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v62=0;local v63;local v64;local v65;local v66;local v67;local v68;while true do if (v62==0) then v63={};v64={};v65={};v66={v63,v64,nil,v65};v62=1;end if (v62==1) then v67=v34();v68={};for v101=569 -(367 + 201) ,v67 do local v102=v32();local v103;if (v102==1) then v103=v32()~=0 ;elseif (v102==2) then v103=v35();elseif (v102==3) then v103=v36();end v68[v101]=v103;end v66[3]=v32();v62=2;end if (v62==2) then for v105=1,v34() do local v106=0;local v107;while true do if (0==v106) then v107=v32();if (v31(v107,1,1)==0) then local v118=0;local v119;local v120;local v121;while true do if (v118==0) then v119=v31(v107,2,3);v120=v31(v107,4,6);v118=1;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then v121[3]=v33();v121[4]=v33();elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then v121[3]=v34() -(2^16) ;v121[4]=v33();end v118=2;end if (v118==3) then if (v31(v120,3,880 -(282 + 595) )==1) then v121[1641 -(1523 + 114) ]=v68[v121[4 + 0 ]];end v63[v105]=v121;break;end if (v118==2) then if (v31(v120,928 -(214 + 713) ,1 + 0 )==1) then v121[1 + 1 ]=v68[v121[2]];end if (v31(v120,2,2)==1) then v121[3]=v68[v121[3]];end v118=3;end end end break;end end end for v108=1,v34() do v64[v108-1 ]=v39();end return v66;end end end local function v40(v69,v70,v71) local v72=v69[1];local v73=v69[2];local v74=v69[3];return function(...) local v77=v72;local v78=v73;local v79=v74;local v80=v38;local v81=1;local v82= -(1 -0);local v83={};local v84={...};local v85=v20("#",...) -(1066 -(68 + 997)) ;local v86={};local v87={};for v97=0,v85 do if (v97>=v79) then v83[v97-v79 ]=v84[v97 + 1 ];else v87[v97]=v84[v97 + (1271 -(226 + 1044)) ];end end local v88=(v85-v79) + (4 -3) ;local v89;local v90;while true do local v98=0;while true do if (v98==0) then v89=v77[v81];v90=v89[1];v98=1;end if (1==v98) then if (v90<=42) then if (v90<=20) then if (v90<=9) then if (v90<=4) then if (v90<=1) then if (v90>0) then do return;end else do return v87[v89[2]]();end end elseif (v90<=2) then local v132=0;local v133;while true do if (v132==0) then v133=v89[2];v87[v133]=v87[v133](v87[v133 + 1 ]);break;end end elseif (v90==3) then local v201=0;while true do if (0==v201) then v87[v89[2]]=v89[3]~=0 ;v81=v81 + 1 ;break;end end else v87[v89[2]]=v87[v89[120 -(32 + 85) ]]%v87[v89[4]] ;end elseif (v90<=(6 + 0)) then if (v90>5) then v87[v89[2]]=v89[3]~=0 ;else local v135=v89[2];v87[v135]=v87[v135](v21(v87,v135 + 1 ,v82));end elseif (v90<=7) then v87[v89[2]]={};elseif (v90>(2 + 6)) then if (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]]=v71[v89[3]];end elseif (v90<=(971 -(892 + 65))) then if (v90<=(25 -14)) then if (v90>10) then local v138=0;local v139;while true do if (v138==0) then v139=v89[2];v87[v139]=v87[v139](v21(v87,v139 + 1 ,v89[3]));break;end end else v87[v89[2]]=v87[v89[3]]%v89[6 -2 ] ;end elseif (v90<=12) then if (v87[v89[2]]~=v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90>13) then local v206=v89[2];local v207=v87[v206 + 2 ];local v208=v87[v206] + v207 ;v87[v206]=v208;if (v207>0) then if (v208<=v87[v206 + 1 ]) then local v378=0;while true do if (v378==0) then v81=v89[3];v87[v206 + 3 ]=v208;break;end end end elseif (v208>=v87[v206 + 1 ]) then local v379=0;while true do if (0==v379) then v81=v89[3];v87[v206 + 3 ]=v208;break;end end end else v87[v89[2]]= #v87[v89[3]];end elseif (v90<=(31 -14)) then if (v90<=15) then local v141=0;local v142;local v143;while true do if (v141==1) then for v332=v142 + 1 ,v82 do v15(v143,v87[v332]);end break;end if (v141==0) then v142=v89[2];v143=v87[v142];v141=1;end end elseif (v90==16) then if  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v89[2]==v87[v89[4]]) then v81=v81 + (351 -(87 + 263)) ;else v81=v89[3];end elseif (v90<=18) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90==19) then v87[v89[2]]=v89[183 -(67 + 113) ];else v87[v89[2]]=v71[v89[3]];end elseif (v90<=31) then if (v90<=(19 + 6)) then if (v90<=22) then if (v90>21) then for v196=v89[2],v89[3] do v87[v196]=nil;end else v87[v89[2]]();end elseif (v90<=23) then v81=v89[3];elseif (v90>24) then v87[v89[2]]=v89[3]~=0 ;else v87[v89[2]]=v70[v89[3]];end elseif (v90<=(68 -40)) then if (v90<=26) then v87[v89[2]]=v89[3] + v87[v89[4]] ;elseif (v90==27) then local v219=v89[2];local v220,v221=v80(v87[v219](v21(v87,v219 + 1 ,v89[3])));v82=(v221 + v219) -1 ;local v222=0;for v294=v219,v82 do v222=v222 + 1 + 0 ;v87[v294]=v220[v222];end else do return v87[v89[2]]();end end elseif (v90<=29) then v87[v89[2]]=v89[3];elseif (v90>30) then v87[v89[7 -5 ]]=v87[v89[3]][v89[4]];else local v225=0;local v226;while true do if (v225==0) then v226=v89[2];v87[v226](v21(v87,v226 + 1 ,v89[955 -(802 + 150) ]));break;end end end elseif (v90<=36) then if (v90<=(88 -55)) then if (v90==32) then local v148=0;local v149;while true do if (v148==0) then v149=v89[2];v87[v149]=v87[v149](v21(v87,v149 + 1 ,v82));break;end end else v87[v89[2]][v89[3]]=v89[4];end elseif (v90<=(61 -27)) then local v152=0;local v153;local v154;local v155;local v156;while true do if (v152==0) then v153=v89[2 + 0 ];v154,v155=v80(v87[v153](v21(v87,v153 + 1 ,v89[1000 -(915 + 82) ])));v152=1;end if (v152==1) then v82=(v155 + v153) -1 ;v156=0;v152=2;end if (v152==2) then for v335=v153,v82 do local v336=0;while true do if (v336==0) then v156=v156 + 1 ;v87[v335]=v154[v156];break;end end end break;end end elseif (v90==35) then local v227=0;local v228;local v229;while true do if (v227==0) then v228=v89[2];v229=v87[v228];v227=1;end if (v227==1) then for v380=v228 + 1 ,v82 do v15(v229,v87[v380]);end break;end end else local v230=0;local v231;while true do if (0==v230) then v231=v89[2];do return v21(v87,v231,v231 + v89[3] );end break;end end end elseif (v90<=39) then if (v90<=37) then local v157=0;local v158;local v159;while true do if (v157==1) then for v337=1, #v86 do local v338=0;local v339;while true do if (v338==0) then v339=v86[v337];for v398=0, #v339 do local v399=0;local v400;local v401;local v402;while true do if (v399==1) then v402=v400[2];if ((v401==v87) and (v402>=v158)) then v159[v402]=v401[v402];v400[1]=v159;end break;end if (v399==0) then v400=v339[v398];v401=v400[1];v399=1;end end end break;end end end break;end if (v157==0) then v158=v89[2];v159={};v157=1;end end elseif (v90>38) then local v232=0;local v233;local v234;while true do if (v232==1) then for v381=1, #v86 do local v382=v86[v381];for v393=0, #v382 do local v394=0;local v395;local v396;local v397;while true do if (1==v394) then v397=v395[2];if ((v396==v87) and (v397>=v233)) then local v420=0;while true do if (v420==0) then v234[v397]=v396[v397];v395[1]=v234;break;end end end break;end if (0==v394) then v395=v382[v393];v396=v395[1];v394=1;end end end end break;end if (v232==0) then v233=v89[5 -3 ];v234={};v232=1;end end else v87[v89[2 + 0 ]]= #v87[v89[3]];end elseif (v90<=(52 -12)) then if (v89[1189 -(1069 + 118) ]==v87[v89[4]]) then v81=v81 + (2 -1) ;else v81=v89[3];end elseif (v90>41) then for v301=v89[2],v89[3] do v87[v301]=nil;end else v87[v89[2]]=v87[v89[3]];end elseif (v90<=64) then if (v90<=53) then if (v90<=47) then if (v90<=44) then if (v90>43) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]]={};end elseif (v90<=(98 -53)) then local v161=0;local v162;while true do if (v161==0) then v162=v89[2];do return v87[v162](v21(v87,v162 + 1 ,v89[3]));end break;end end elseif (v90==46) then local v240=0;local v241;while true do if (v240==0) then v241=v89[2];do return v87[v241](v21(v87,v241 + 1 + 0 ,v89[3]));end break;end end else local v242=v89[3 -1 ];local v243,v244=v80(v87[v242](v21(v87,v242 + 1 ,v82)));v82=(v244 + v242) -1 ;local v245=0;for v304=v242,v82 do local v305=0;while true do if (v305==0) then v245=v245 + 1 + 0 ;v87[v304]=v243[v245];break;end end end end elseif (v90<=50) then if (v90<=(839 -(368 + 423))) then local v163=v89[2];local v164=v87[v163];local v165=v87[v163 + 2 ];if (v165>(0 -0)) then if (v164>v87[v163 + 1 ]) then v81=v89[3];else v87[v163 + (21 -(10 + 8)) ]=v164;end elseif (v164<v87[v163 + 1 ]) then v81=v89[3];else v87[v163 + (11 -8) ]=v164;end elseif (v90>49) then if  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]]=v87[v89[3]]%v89[4] ;end elseif (v90<=51) then local v166=0;local v167;local v168;local v169;while true do if (v166==0) then v167=v78[v89[3]];v168=nil;v166=1;end if (v166==1) then v169={};v168=v18({},{[v7("\137\142\83\64\19\52\176","\52\214\209\58\46\119\81\200")]=function(v345,v346) local v347=v169[v346];return v347[1][v347[2]];end,[v7("\122\243\56\46\155\185\75\200\51\51","\208\37\172\86\75\236")]=function(v348,v349,v350) local v351=v169[v349];v351[1][v351[2]]=v350;end});v166=2;end if (v166==2) then for v353=1,v89[4] do v81=v81 + 1 ;local v354=v77[v81];if (v354[1]==(510 -(416 + 26))) then v169[v353-1 ]={v87,v354[3]};else v169[v353-1 ]={v70,v354[3]};end v86[ #v86 + 1 ]=v169;end v87[v89[2]]=v40(v167,v168,v71);break;end end elseif (v90==52) then do return;end else v87[v89[2]][v89[3]]=v87[v89[4]];end elseif (v90<=58) then if (v90<=(175 -120)) then if (v90==54) then local v170=v89[1 + 1 ];local v171,v172=v80(v87[v170](v87[v170 + 1 ]));v82=(v172 + v170) -1 ;local v173=0;for v198=v170,v82 do v173=v173 + 1 ;v87[v198]=v171[v173];end else v87[v89[2]]=v70[v89[3]];end elseif (v90<=56) then local v176=0;while true do if (v176==0) then v87[v89[2]]=v89[3]~=0 ;v81=v81 + 1 ;break;end end elseif (v90>57) then local v249=v89[2];v87[v249](v87[v249 + 1 ]);else local v250=0;local v251;local v252;local v253;while true do if (v250==1) then v253=v87[v251 + 2 ];if (v253>0) then if (v252>v87[v251 + 1 ]) then v81=v89[3];else v87[v251 + 3 ]=v252;end elseif (v252<v87[v251 + 1 ]) then v81=v89[3];else v87[v251 + 3 ]=v252;end break;end if (v250==0) then v251=v89[2];v252=v87[v251];v250=1;end end end elseif (v90<=61) then if (v90<=59) then local v177=0;local v178;while true do if (v177==0) then v178=v89[2];v87[v178]=v87[v178](v87[v178 + 1 ]);break;end end elseif (v90==60) then local v254=v89[2];v87[v254](v87[v254 + 1 ]);else local v255=v89[2];local v256,v257=v80(v87[v255](v87[v255 + 1 ]));v82=(v257 + v255) -1 ;local v258=0;for v311=v255,v82 do v258=v258 + 1 ;v87[v311]=v256[v258];end end elseif (v90<=62) then local v179=0;local v180;local v181;while true do if (v179==0) then v180=v89[2];v181=v87[v89[3]];v179=1;end if (v179==1) then v87[v180 + 1 ]=v181;v87[v180]=v181[v89[4]];break;end end elseif (v90>63) then v81=v89[3];else local v260=0;local v261;local v262;local v263;while true do if (v260==1) then v263=v87[v261] + v262 ;v87[v261]=v263;v260=2;end if (0==v260) then v261=v89[2];v262=v87[v261 + 2 ];v260=1;end if (v260==2) then if (v262>0) then if (v263<=v87[v261 + 1 ]) then local v411=0;while true do if (0==v411) then v81=v89[3];v87[v261 + (4 -1) ]=v263;break;end end end elseif (v263>=v87[v261 + 1 ]) then v81=v89[3];v87[v261 + 3 ]=v263;end break;end end end elseif (v90<=75) then if (v90<=69) then if (v90<=66) then if (v90>65) then local v182=v89[2];v87[v182](v21(v87,v182 + 1 ,v82));else v87[v89[2]][v89[3]]=v87[v89[4]];end elseif (v90<=67) then local v185=v89[2];v87[v185]=v87[v185](v21(v87,v185 + 1 ,v89[3]));elseif (v90==68) then v87[v89[2]]=v87[v89[3]];else local v266=v89[2];v87[v266](v21(v87,v266 + (439 -(145 + 293)) ,v89[433 -(44 + 386) ]));end elseif (v90<=72) then if (v90<=70) then v87[v89[2]][v89[3]]=v89[1490 -(998 + 488) ];elseif (v90>71) then local v267=0;local v268;local v269;while true do if (v267==1) then v87[v268 + 1 ]=v269;v87[v268]=v269[v89[4]];break;end if (v267==0) then v268=v89[2];v269=v87[v89[3]];v267=1;end end else v87[v89[2]]();end elseif (v90<=73) then local v189=0;local v190;while true do if (v189==0) then v190=v89[2];v87[v190](v21(v87,v190 + 1 + 0 ,v82));break;end end elseif (v90>74) then do return v87[v89[2]];end else local v270=v78[v89[3]];local v271;local v272={};v271=v18({},{[v7("\150\130\230\133\168\172\165","\204\201\221\143\235")]=function(v320,v321) local v322=v272[v321];return v322[1][v322[2]];end,[v7("\72\186\240\68\96\140\240\69\114\157","\33\23\229\158")]=function(v323,v324,v325) local v326=v272[v324];v326[1][v326[2]]=v325;end});for v328=1,v89[4 + 0 ] do v81=v81 + 1 ;local v329=v77[v81];if (v329[1]==68) then v272[v328-1 ]={v87,v329[775 -(201 + 571) ]};else v272[v328-1 ]={v70,v329[3]};end v86[ #v86 + 1 ]=v272;end v87[v89[2]]=v40(v270,v271,v71);end elseif (v90<=80) then if (v90<=(1215 -(116 + 1022))) then if (v90>76) then v87[v89[2]]=v87[v89[3]][v89[4]];elseif (v87[v89[2]]~=v87[v89[16 -12 ]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=78) then v87[v89[2]]=v89[3] + v87[v89[4]] ;elseif (v90>79) then local v275=v89[2];do return v21(v87,v275,v82);end else v87[v89[2 + 0 ]]=v87[v89[3]] + v89[4] ;end elseif (v90<=83) then if (v90<=81) then v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;elseif (v90==82) then v87[v89[2]]=v87[v89[3]] + v89[4] ;else local v278=0;local v279;local v280;local v281;local v282;while true do if (v278==0) then v279=v89[2];v280,v281=v80(v87[v279](v21(v87,v279 + (3 -2) ,v82)));v278=1;end if (v278==1) then v82=(v281 + v279) -1 ;v282=0;v278=2;end if (v278==2) then for v387=v279,v82 do v282=v282 + 1 ;v87[v387]=v280[v282];end break;end end end elseif (v90<=84) then if (v87[v89[2]]==v89[14 -10 ]) then v81=v81 + 1 ;else v81=v89[862 -(814 + 45) ];end elseif (v90==85) then local v284=0;local v285;while true do if (v284==0) then v285=v89[2];do return v21(v87,v285,v82);end break;end end else do return v87[v89[2]];end end v81=v81 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
